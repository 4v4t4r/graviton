<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: FSFile.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('FSFile_8hpp.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">FSFile.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="FSFile_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* The MIT License:</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2009-2012 Ivan Gagis</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE. */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">// Home page: http://ting.googlecode.com</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00032"></a>00032 <span class="preprocessor">#pragma once</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;cstdio&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;../debug.hpp&quot;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="File_8hpp.htm">File.hpp</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;../Ptr.hpp&quot;</span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="keyword">namespace </span>ting{
<a name="l00044"></a>00044 <span class="keyword">namespace </span>fs{
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 
<a name="l00052"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm">00052</a> <span class="keyword">class </span><a class="code" href="classting_1_1fs_1_1FSFile.htm" title="Native OS file system implementation of File interface.">FSFile</a> : <span class="keyword">public</span> <a class="code" href="classting_1_1fs_1_1File.htm" title="Abstract interface to a file system.">File</a>{
<a name="l00053"></a>00053         std::string rootDir;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055         <a class="code" href="classting_1_1Inited.htm">ting::Inited&lt;FILE*, 0&gt;</a> handle;
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">protected</span>:
<a name="l00058"></a>00058 
<a name="l00059"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm#ac3ffacaddab0843aa576ce17908a0e3e">00059</a>         <span class="keyword">inline</span> std::string <a class="code" href="classting_1_1fs_1_1FSFile.htm#ac3ffacaddab0843aa576ce17908a0e3e">TruePath</a>()<span class="keyword">const</span>{
<a name="l00060"></a>00060                 <span class="keywordflow">return</span> this-&gt;rootDir + this-&gt;<a class="code" href="classting_1_1fs_1_1File.htm#a2d02c33cbeced7cf6d1552852257f8af" title="Get the current path being held by this File instance.">Path</a>();
<a name="l00061"></a>00061         }
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 <span class="keyword">public</span>:
<a name="l00068"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm#ae5aacdff37f7810d5352c7c3b7bf8b23">00068</a>         <a class="code" href="classting_1_1fs_1_1FSFile.htm#ae5aacdff37f7810d5352c7c3b7bf8b23" title="Constructor.">FSFile</a>(<span class="keyword">const</span> std::string&amp; pathName = std::string()) :
<a name="l00069"></a>00069                         <a class="code" href="classting_1_1fs_1_1File.htm" title="Abstract interface to a file system.">File</a>(pathName)
<a name="l00070"></a>00070         {}
<a name="l00071"></a>00071         
<a name="l00076"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm#ac4040765237bee85a86ea53bf40aec68">00076</a>         <a class="code" href="classting_1_1fs_1_1FSFile.htm#ac4040765237bee85a86ea53bf40aec68" title="Destructor.">~FSFile</a>()throw(){
<a name="l00077"></a>00077                 this-&gt;<a class="code" href="classting_1_1fs_1_1FSFile.htm#a5c6ded477a4139e67e27a565fba6bfd3" title="Close file.">Close</a>();
<a name="l00078"></a>00078         }
<a name="l00079"></a>00079 
<a name="l00089"></a>00089         <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a05f68654032ba583ea67416d26b4daeb" title="Set root directory.">SetRootDir</a>(<span class="keyword">const</span> std::string &amp;dir);
<a name="l00090"></a>00090 
<a name="l00097"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm#a87b98512a952ff7e097c8b1c8847d677">00097</a>         <span class="keyword">inline</span> <span class="keyword">const</span> std::string&amp; <a class="code" href="classting_1_1fs_1_1FSFile.htm#a87b98512a952ff7e097c8b1c8847d677" title="Get current root directory.">GetRootDir</a>()<span class="keyword">const</span> throw(){
<a name="l00098"></a>00098                 <span class="keywordflow">return</span> this-&gt;rootDir;
<a name="l00099"></a>00099         }
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 
<a name="l00102"></a>00102         <span class="comment">//override</span>
<a name="l00103"></a>00103         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#ab299340d05bc84adfca116480c9b8c21" title="Open file.">Open</a>(<a class="code" href="classting_1_1fs_1_1File.htm#a00e1ee34be46110fb687ca6215f6c3b4" title="Modes of opening the file.">E_Mode</a> mode);
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 
<a name="l00107"></a>00107         <span class="comment">//override</span>
<a name="l00108"></a>00108         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a5c6ded477a4139e67e27a565fba6bfd3" title="Close file.">Close</a>()throw();
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 
<a name="l00111"></a>00111 
<a name="l00112"></a>00112         <span class="comment">//override</span>
<a name="l00113"></a>00113         virtual <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a803e07106f5270de2272eb5efcd6761f" title="Read data from file.">ReadInternal</a>(const ting::<a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&lt;ting::<a class="code" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66" title="Unsigned 8 bit type.">u8</a>&gt;&amp; buf);
<a name="l00114"></a>00114 
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="comment">//override</span>
<a name="l00118"></a>00118         virtual <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#ab664c71a5f3cfdf0fdeac260cea55d2c" title="Write data to file.">WriteInternal</a>(const ting::<a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&lt;const ting::<a class="code" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66" title="Unsigned 8 bit type.">u8</a>&gt;&amp; buf);
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <span class="comment">//override</span>
<a name="l00123"></a>00123         virtual <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#adbdf4fc043af1377b66ac5d3466896ae" title="Seek forward.">SeekForward</a>(<span class="keywordtype">size_t</span> numBytesToSeek);
<a name="l00124"></a>00124         
<a name="l00125"></a>00125         
<a name="l00126"></a>00126         
<a name="l00127"></a>00127         <span class="comment">//override</span>
<a name="l00128"></a>00128         virtual <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#ac36deb577ebde76a2c9e8e78d2746504" title="Seek backwards.">SeekBackward</a>(<span class="keywordtype">size_t</span> numBytesToSeek);
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         
<a name="l00131"></a>00131         
<a name="l00138"></a>00138         <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#ad591dc9d5d2a2c48e51cd2f120355ac8" title="Seek forward or backward.">Seek</a>(<span class="keywordtype">size_t</span> numBytesToSeek, <span class="keywordtype">bool</span> seekForward);
<a name="l00139"></a>00139         
<a name="l00140"></a>00140         
<a name="l00141"></a>00141         <span class="comment">//override</span>
<a name="l00142"></a>00142         virtual <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a77778439062093090f358de90a779d20" title="Seek to the beginning of the file.">Rewind</a>();
<a name="l00143"></a>00143         
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 
<a name="l00146"></a>00146         <span class="comment">//override</span>
<a name="l00147"></a>00147         virtual <span class="keywordtype">bool</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a607c89925082c7fc14569809a3f9ac87" title="Check for file/directory existence.">Exists</a>()const;
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00150"></a>00150 
<a name="l00151"></a>00151         <span class="comment">//override</span>
<a name="l00152"></a>00152         virtual <span class="keywordtype">void</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#aebd0668a03646facdcd9bca41d60e507" title="Create directory.">MakeDir</a>();
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 
<a name="l00156"></a>00156 public:
<a name="l00163"></a>00163         static std::<span class="keywordtype">string</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#a729afefbfe8f388e09dac075123b6c87" title="Get user home directory.">GetHomeDir</a>();
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 
<a name="l00167"></a>00167         <span class="comment">//override</span>
<a name="l00168"></a>00168         virtual ting::<a class="code" href="classting_1_1Array.htm" title="wrapper above new[]/delete[].">Array</a>&lt;std::<span class="keywordtype">string</span>&gt; <a class="code" href="classting_1_1fs_1_1FSFile.htm#a46c8158df7765455fdc52f075fe40e07" title="Get list of files and subdirectories of a directory.">ListDirContents</a>(<span class="keywordtype">size_t</span> maxEntries = 0);
<a name="l00169"></a>00169         
<a name="l00175"></a><a class="code" href="classting_1_1fs_1_1FSFile.htm#a8f9ca214addb34e0f50c1f9428ebf9a7">00175</a>         static inline ting::<a class="code" href="classting_1_1Ptr.htm" title="Auto-pointer template class.">Ptr</a>&lt;<a class="code" href="classting_1_1fs_1_1FSFile.htm" title="Native OS file system implementation of File interface.">FSFile</a>&gt; <a class="code" href="classting_1_1fs_1_1FSFile.htm#a8f9ca214addb34e0f50c1f9428ebf9a7" title="Create new instance managed by auto-pointer.">New</a>(const std::<span class="keywordtype">string</span>&amp; pathName = std::<span class="keywordtype">string</span>()){
<a name="l00176"></a>00176                 <span class="keywordflow">return</span> <a class="code" href="classting_1_1Ptr.htm" title="Auto-pointer template class.">ting::Ptr&lt;FSFile&gt;</a>(<span class="keyword">new</span> <a class="code" href="classting_1_1fs_1_1FSFile.htm#ae5aacdff37f7810d5352c7c3b7bf8b23" title="Constructor.">FSFile</a>(pathName));
<a name="l00177"></a>00177         }
<a name="l00178"></a>00178 };
<a name="l00179"></a>00179 
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00182"></a>00182 }<span class="comment">//~namespace</span>
<a name="l00183"></a>00183 }<span class="comment">//~namespace</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="FSFile_8hpp.htm">FSFile.hpp</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:35 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
