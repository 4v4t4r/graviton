<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::net::TCPSocket Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1net_1_1TCPSocket.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::net::TCPSocket Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::net::TCPSocket" --><!-- doxytag: inherits="ting::net::Socket" -->
<p>a class which represents a TCP socket.  
 <a href="classting_1_1net_1_1TCPSocket.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="TCPSocket_8hpp_source.htm">TCPSocket.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ting::net::TCPSocket:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classting_1_1net_1_1TCPSocket.png" usemap="#ting::net::TCPSocket_map" alt=""/>
  <map id="ting::net::TCPSocket_map" name="ting::net::TCPSocket_map">
<area href="classting_1_1net_1_1Socket.htm" title="Basic socket class." alt="ting::net::Socket" shape="rect" coords="0,56,123,80"/>
<area href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for." alt="ting::Waitable" shape="rect" coords="0,0,123,24"/>
</map>
 </div></div>

<p><a href="classting_1_1net_1_1TCPSocket-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a877dc84b68d1cb26df179008cdae6230">TCPSocket</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an invalid TCP socket object.  <a href="#a877dc84b68d1cb26df179008cdae6230"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#ab1e44b1dd4909c5a8099a64e8b98b485">TCPSocket</a> (const <a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a> &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A copy constructor.  <a href="#ab1e44b1dd4909c5a8099a64e8b98b485"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a1a4b0d8efb0c45735b77b4f8fce6e773">operator=</a> (const <a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a> &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator, works similar to std::auto_ptr::operator=().  <a href="#a1a4b0d8efb0c45735b77b4f8fce6e773"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a180b2b818eaee51f8f4516cdd62d08bc">Open</a> (const <a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a> &amp;ip, bool disableNaggle=false)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Connects the socket.  <a href="#a180b2b818eaee51f8f4516cdd62d08bc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#ae6c8fa1d6ed8b097658a81046b54c9fc">Send</a> (const <a class="el" href="classting_1_1Buffer.htm">ting::Buffer</a>&lt; const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">ting::u8</a> &gt; &amp;buf, size_t offset=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Send data to connected socket.  <a href="#ae6c8fa1d6ed8b097658a81046b54c9fc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a8e781aa2f91e6748d7159d0f55b7bc29">Recv</a> (const <a class="el" href="classting_1_1Buffer.htm">ting::Buffer</a>&lt; <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">ting::u8</a> &gt; &amp;buf, size_t offset=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Receive data from connected socket.  <a href="#a8e781aa2f91e6748d7159d0f55b7bc29"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a3e162b7774a14c5bbb1be07a9964ccd5">GetLocalAddress</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get local IP address and port.  <a href="#a3e162b7774a14c5bbb1be07a9964ccd5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#acc53a7eb1b8dcd88c1927146f81cf22e">GetRemoteAddress</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get remote IP address and port.  <a href="#acc53a7eb1b8dcd88c1927146f81cf22e"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>a class which represents a TCP socket. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a877dc84b68d1cb26df179008cdae6230"></a><!-- doxytag: member="ting::net::TCPSocket::TCPSocket" ref="a877dc84b68d1cb26df179008cdae6230" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a877dc84b68d1cb26df179008cdae6230">ting::net::TCPSocket::TCPSocket</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs an invalid TCP socket object. </p>

</div>
</div>
<a class="anchor" id="ab1e44b1dd4909c5a8099a64e8b98b485"></a><!-- doxytag: member="ting::net::TCPSocket::TCPSocket" ref="ab1e44b1dd4909c5a8099a64e8b98b485" args="(const TCPSocket &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1net_1_1TCPSocket.htm#a877dc84b68d1cb26df179008cdae6230">ting::net::TCPSocket::TCPSocket</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A copy constructor. </p>
<p>Copy constructor creates a new socket object which refers to the same socket as s. After constructor completes the s becomes invalid. In other words, the behavior of copy constructor is similar to one of std::auto_ptr class from standard C++ library. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>- other TCP socket to make a copy from. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a3e162b7774a14c5bbb1be07a9964ccd5"></a><!-- doxytag: member="ting::net::TCPSocket::GetLocalAddress" ref="a3e162b7774a14c5bbb1be07a9964ccd5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a> <a class="el" href="classting_1_1net_1_1TCPSocket.htm#a3e162b7774a14c5bbb1be07a9964ccd5">ting::net::TCPSocket::GetLocalAddress</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get local IP address and port. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>IP address and port of the local socket. </dd></dl>

</div>
</div>
<a class="anchor" id="acc53a7eb1b8dcd88c1927146f81cf22e"></a><!-- doxytag: member="ting::net::TCPSocket::GetRemoteAddress" ref="acc53a7eb1b8dcd88c1927146f81cf22e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a> <a class="el" href="classting_1_1net_1_1TCPSocket.htm#acc53a7eb1b8dcd88c1927146f81cf22e">ting::net::TCPSocket::GetRemoteAddress</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get remote IP address and port. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>IP address and port of the peer socket. </dd></dl>

</div>
</div>
<a class="anchor" id="a180b2b818eaee51f8f4516cdd62d08bc"></a><!-- doxytag: member="ting::net::TCPSocket::Open" ref="a180b2b818eaee51f8f4516cdd62d08bc" args="(const IPAddress &amp;ip, bool disableNaggle=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1net_1_1TCPSocket.htm#a180b2b818eaee51f8f4516cdd62d08bc">ting::net::TCPSocket::Open</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1net_1_1IPAddress.htm">IPAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>ip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>disableNaggle</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Connects the socket. </p>
<p>This method connects the socket to remote TCP server socket. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ip</td><td>- IP address. </td></tr>
    <tr><td class="paramname">disableNaggle</td><td>- enable/disable Naggle algorithm. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1a4b0d8efb0c45735b77b4f8fce6e773"></a><!-- doxytag: member="ting::net::TCPSocket::operator=" ref="a1a4b0d8efb0c45735b77b4f8fce6e773" args="(const TCPSocket &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a>&amp; ting::net::TCPSocket::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assignment operator, works similar to std::auto_ptr::operator=(). </p>
<p>After this assignment operator completes this socket object refers to the socket the s object referred, s become invalid. It works similar to std::auto_ptr::operator=() from standard C++ library. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>- socket to assign from. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8e781aa2f91e6748d7159d0f55b7bc29"></a><!-- doxytag: member="ting::net::TCPSocket::Recv" ref="a8e781aa2f91e6748d7159d0f55b7bc29" args="(const ting::Buffer&lt; ting::u8 &gt; &amp;buf, size_t offset=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classting_1_1net_1_1TCPSocket.htm#a8e781aa2f91e6748d7159d0f55b7bc29">ting::net::TCPSocket::Recv</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Buffer.htm">ting::Buffer</a>&lt; <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">ting::u8</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>offset</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Receive data from connected socket. </p>
<p>Receives data available on the socket. If there is no data available this function does not block, instead it returns 0, indicating that 0 bytes were received. If previous <a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39" title="wait for event.">WaitSet::Wait()</a> indicated that socket is ready for reading and <a class="el" href="classting_1_1net_1_1TCPSocket.htm#a8e781aa2f91e6748d7159d0f55b7bc29" title="Receive data from connected socket.">TCPSocket::Recv()</a> returns 0, then connection was closed by peer. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to the buffer where to put received data. </td></tr>
    <tr><td class="paramname">offset</td><td>- offset inside the buffer where to start putting data from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of bytes written to the buffer. </dd></dl>

</div>
</div>
<a class="anchor" id="ae6c8fa1d6ed8b097658a81046b54c9fc"></a><!-- doxytag: member="ting::net::TCPSocket::Send" ref="ae6c8fa1d6ed8b097658a81046b54c9fc" args="(const ting::Buffer&lt; const ting::u8 &gt; &amp;buf, size_t offset=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classting_1_1net_1_1TCPSocket.htm#ae6c8fa1d6ed8b097658a81046b54c9fc">ting::net::TCPSocket::Send</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Buffer.htm">ting::Buffer</a>&lt; const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">ting::u8</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>offset</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Send data to connected socket. </p>
<p>Sends data on connected socket. This method does not guarantee that the whole buffer will be sent completely, it will return the number of bytes actually sent. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to the buffer with data to send. </td></tr>
    <tr><td class="paramname">offset</td><td>- offset inside the buffer from where to start sending the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of bytes actually sent. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="TCPSocket_8hpp_source.htm">TCPSocket.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="namespaceting_1_1net.htm">net</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1net_1_1TCPSocket.htm">TCPSocket</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:38 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
