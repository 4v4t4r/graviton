<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::atomic::S32 Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1atomic_1_1S32.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::atomic::S32 Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::atomic::S32" -->
<p>Atomic signed 32bit integer.  
 <a href="classting_1_1atomic_1_1S32.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="atomic_8hpp_source.htm">atomic.hpp</a>&gt;</code></p>

<p><a href="classting_1_1atomic_1_1S32-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#a5c7d5a74b231bf941efa516c4a23a923">S32</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> initialValue=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a5c7d5a74b231bf941efa516c4a23a923"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#a0b7632baa338c0bc1f3cdf774b82a29e">~S32</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#a1293bbaf90e53a83e6d31d17368db75a">FetchAndAdd</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> value)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value to this atomic variable and returns its initial value.  <a href="#a1293bbaf90e53a83e6d31d17368db75a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#a32d76005478cfd1ffd58fca2858f5e3c">FetchAndAddAcquire</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> value)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value to this atomic variable and returns its initial value.  <a href="#a32d76005478cfd1ffd58fca2858f5e3c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#aa8b8f984cc5cc4bb4b30b7331fb1cfae">FetchAndAddRelease</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> value)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value to this atomic variable and returns its initial value.  <a href="#aa8b8f984cc5cc4bb4b30b7331fb1cfae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#a4eb498172b297d3fe52f998501eee2f4">CompareAndExchange</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> compareTo, <a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> exchangeBy)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Atomic compare and exchange operation.  <a href="#a4eb498172b297d3fe52f998501eee2f4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#aeadbb6f81f16c8f1c337ba8da46c7ba6">CompareAndExchangeAcquire</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> compareTo, <a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> exchangeBy)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Atomic compare and exchange operation.  <a href="#aeadbb6f81f16c8f1c337ba8da46c7ba6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1atomic_1_1S32.htm#abc2bce81843186ccd47ed3c313d0065a">CompareAndExchangeRelease</a> (<a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> compareTo, <a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> exchangeBy)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Atomic compare and exchange operation.  <a href="#abc2bce81843186ccd47ed3c313d0065a"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Atomic signed 32bit integer. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5c7d5a74b231bf941efa516c4a23a923"></a><!-- doxytag: member="ting::atomic::S32::S32" ref="a5c7d5a74b231bf941efa516c4a23a923" args="(ting::s32 initialValue=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1atomic_1_1S32.htm#a5c7d5a74b231bf941efa516c4a23a923">ting::atomic::S32::S32</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>initialValue</em> = <code>0</code></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">initialValue</td><td>- initial value to assign to this atomic variable. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0b7632baa338c0bc1f3cdf774b82a29e"></a><!-- doxytag: member="ting::atomic::S32::~S32" ref="a0b7632baa338c0bc1f3cdf774b82a29e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1atomic_1_1S32.htm#a0b7632baa338c0bc1f3cdf774b82a29e">ting::atomic::S32::~S32</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a4eb498172b297d3fe52f998501eee2f4"></a><!-- doxytag: member="ting::atomic::S32::CompareAndExchange" ref="a4eb498172b297d3fe52f998501eee2f4" args="(ting::s32 compareTo, ting::s32 exchangeBy)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#a4eb498172b297d3fe52f998501eee2f4">ting::atomic::S32::CompareAndExchange</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>compareTo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>exchangeBy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Atomic compare and exchange operation. </p>
<p>Compares the current value to the 'compareTo' value and if they are equal it will store the 'exchangeBy' value to the current value. It does not set any memory barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">compareTo</td><td>- the value to compare the current value to. </td></tr>
    <tr><td class="paramname">exchangeBy</td><td>- the value to store as the the current value in case the comparison will result in equals. Otherwise, the current value will remain untouched. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Previous value. </dd></dl>

</div>
</div>
<a class="anchor" id="aeadbb6f81f16c8f1c337ba8da46c7ba6"></a><!-- doxytag: member="ting::atomic::S32::CompareAndExchangeAcquire" ref="aeadbb6f81f16c8f1c337ba8da46c7ba6" args="(ting::s32 compareTo, ting::s32 exchangeBy)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#aeadbb6f81f16c8f1c337ba8da46c7ba6">ting::atomic::S32::CompareAndExchangeAcquire</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>compareTo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>exchangeBy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Atomic compare and exchange operation. </p>
<p>Compares the current value to the 'compareTo' value and if they are equal it will store the 'exchangeBy' value to the current value. It sets acquire memory semantics barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">compareTo</td><td>- the value to compare the current value to. </td></tr>
    <tr><td class="paramname">exchangeBy</td><td>- the value to store as the the current value in case the comparison will result in equals. Otherwise, the current value will remain untouched. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Previous value. </dd></dl>

</div>
</div>
<a class="anchor" id="abc2bce81843186ccd47ed3c313d0065a"></a><!-- doxytag: member="ting::atomic::S32::CompareAndExchangeRelease" ref="abc2bce81843186ccd47ed3c313d0065a" args="(ting::s32 compareTo, ting::s32 exchangeBy)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#abc2bce81843186ccd47ed3c313d0065a">ting::atomic::S32::CompareAndExchangeRelease</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>compareTo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>exchangeBy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Atomic compare and exchange operation. </p>
<p>Compares the current value to the 'compareTo' value and if they are equal it will store the 'exchangeBy' value to the current value. It sets release memory semantics barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">compareTo</td><td>- the value to compare the current value to. </td></tr>
    <tr><td class="paramname">exchangeBy</td><td>- the value to store as the the current value in case the comparison will result in equals. Otherwise, the current value will remain untouched. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Previous value. </dd></dl>

</div>
</div>
<a class="anchor" id="a1293bbaf90e53a83e6d31d17368db75a"></a><!-- doxytag: member="ting::atomic::S32::FetchAndAdd" ref="a1293bbaf90e53a83e6d31d17368db75a" args="(ting::s32 value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#a1293bbaf90e53a83e6d31d17368db75a">ting::atomic::S32::FetchAndAdd</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds the value to this atomic variable and returns its initial value. </p>
<p>It does not set any memory barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value to add to this atomic variable. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>initial value of this atomic variable. </dd></dl>

</div>
</div>
<a class="anchor" id="a32d76005478cfd1ffd58fca2858f5e3c"></a><!-- doxytag: member="ting::atomic::S32::FetchAndAddAcquire" ref="a32d76005478cfd1ffd58fca2858f5e3c" args="(ting::s32 value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#a32d76005478cfd1ffd58fca2858f5e3c">ting::atomic::S32::FetchAndAddAcquire</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds the value to this atomic variable and returns its initial value. </p>
<p>It sets acquire memory semantics barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value to add to this atomic variable. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>initial value of this atomic variable. </dd></dl>

</div>
</div>
<a class="anchor" id="aa8b8f984cc5cc4bb4b30b7331fb1cfae"></a><!-- doxytag: member="ting::atomic::S32::FetchAndAddRelease" ref="aa8b8f984cc5cc4bb4b30b7331fb1cfae" args="(ting::s32 value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a> <a class="el" href="classting_1_1atomic_1_1S32.htm#aa8b8f984cc5cc4bb4b30b7331fb1cfae">ting::atomic::S32::FetchAndAddRelease</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#a538865e72a75616abe86558cbe983026">ting::s32</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds the value to this atomic variable and returns its initial value. </p>
<p>It sets release memory semantics barrier. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value to add to this atomic variable. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>initial value of this atomic variable. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="atomic_8hpp_source.htm">atomic.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="namespaceting_1_1atomic.htm">atomic</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1atomic_1_1S32.htm">S32</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:37 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
