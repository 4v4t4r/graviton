<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::WaitSet Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1WaitSet.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::WaitSet Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::WaitSet" -->
<p>Set of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects to wait for.  
 <a href="classting_1_1WaitSet.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a>&gt;</code></p>

<p><a href="classting_1_1WaitSet-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a27c079f5a712a033adba2013723d0c98">WaitSet</a> (unsigned maxSize)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a27c079f5a712a033adba2013723d0c98"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a21a2bcc5384749ea533b2c1b291a1419">Size</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get maximum size of the wait set.  <a href="#a21a2bcc5384749ea533b2c1b291a1419"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a313f480f74bc0466c551b005402d1f03">NumWaitables</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of Waitables already added to this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a>.  <a href="#a313f480f74bc0466c551b005402d1f03"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a82c740315d7e0ab0414394086334ae97">Add</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a> flagsToWaitFor)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to the wait set.  <a href="#a82c740315d7e0ab0414394086334ae97"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#ad5e4ef0601355c7285e6b7e8136d75ec">Change</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a> flagsToWaitFor)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change wait flags for a given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>.  <a href="#ad5e4ef0601355c7285e6b7e8136d75ec"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a83feb2b9422c4d039e01b6a908e3e8c0">Remove</a> (<a class="el" href="classting_1_1Waitable.htm">Waitable</a> *w)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> from wait set.  <a href="#a83feb2b9422c4d039e01b6a908e3e8c0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39">Wait</a> (<a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *out_events=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">wait for event.  <a href="#a9f6d4ac786e9a731abcda2242b59bf39"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WaitSet.htm#a112d3ab74291753be3dabc0cef86ccbf">WaitWithTimeout</a> (<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> timeout, <a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *out_events=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">wait for event with timeout.  <a href="#a112d3ab74291753be3dabc0cef86ccbf"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Set of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects to wait for. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a27c079f5a712a033adba2013723d0c98"></a><!-- doxytag: member="ting::WaitSet::WaitSet" ref="a27c079f5a712a033adba2013723d0c98" args="(unsigned maxSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WaitSet.htm#a27c079f5a712a033adba2013723d0c98">ting::WaitSet::WaitSet</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>maxSize</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">maxSize</td><td>- maximum number of <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects can be added to this wait set. Destructor. Note, that destructor will check if the wait set is empty. If it is not, then an assert will be triggered. It is user's responsibility to remove any waitable objects from the waitset before the wait set object is destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a82c740315d7e0ab0414394086334ae97"></a><!-- doxytag: member="ting::WaitSet::Add" ref="a82c740315d7e0ab0414394086334ae97" args="(Waitable *w, Waitable::EReadinessFlags flagsToWaitFor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1WaitSet.htm#a82c740315d7e0ab0414394086334ae97">ting::WaitSet::Add</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a>&#160;</td>
          <td class="paramname"><em>flagsToWaitFor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to the wait set. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>- pointer to the <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object. </td></tr>
    <tr><td class="paramname">flagsToWaitFor</td><td>- determine events waiting for which we are interested. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></td><td>- in case the wait set is full or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad5e4ef0601355c7285e6b7e8136d75ec"></a><!-- doxytag: member="ting::WaitSet::Change" ref="ad5e4ef0601355c7285e6b7e8136d75ec" args="(Waitable *w, Waitable::EReadinessFlags flagsToWaitFor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1WaitSet.htm#ad5e4ef0601355c7285e6b7e8136d75ec">ting::WaitSet::Change</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">Waitable::EReadinessFlags</a>&#160;</td>
          <td class="paramname"><em>flagsToWaitFor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Change wait flags for a given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </p>
<p>Changes wait flags for a given waitable, which is in this waitset. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>- pointer to <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> for which the changing of wait flags is needed. </td></tr>
    <tr><td class="paramname">flagsToWaitFor</td><td>- new wait flags to be set for the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></td><td>- in case the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object is not added to this wait set or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a313f480f74bc0466c551b005402d1f03"></a><!-- doxytag: member="ting::WaitSet::NumWaitables" ref="a313f480f74bc0466c551b005402d1f03" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classting_1_1WaitSet.htm#a313f480f74bc0466c551b005402d1f03">ting::WaitSet::NumWaitables</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of Waitables already added to this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a>. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of Waitables added to this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a83feb2b9422c4d039e01b6a908e3e8c0"></a><!-- doxytag: member="ting::WaitSet::Remove" ref="a83feb2b9422c4d039e01b6a908e3e8c0" args="(Waitable *w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1WaitSet.htm#a83feb2b9422c4d039e01b6a908e3e8c0">ting::WaitSet::Remove</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> *&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td>  throw ()</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Remove <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> from wait set. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>- pointer to <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to be removed from the wait set. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></td><td>- in case the given <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> is not added to this wait set or other error occurs. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a21a2bcc5384749ea533b2c1b291a1419"></a><!-- doxytag: member="ting::WaitSet::Size" ref="a21a2bcc5384749ea533b2c1b291a1419" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classting_1_1WaitSet.htm#a21a2bcc5384749ea533b2c1b291a1419">ting::WaitSet::Size</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get maximum size of the wait set. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>maximum number of Waitables this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a> can hold. </dd></dl>

</div>
</div>
<a class="anchor" id="a9f6d4ac786e9a731abcda2242b59bf39"></a><!-- doxytag: member="ting::WaitSet::Wait" ref="a9f6d4ac786e9a731abcda2242b59bf39" args="(Buffer&lt; Waitable * &gt; *out_events=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39">ting::WaitSet::Wait</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *&#160;</td>
          <td class="paramname"><em>out_events</em> = <code>0</code></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>wait for event. </p>
<p>This function blocks calling thread execution until one of the <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects in the <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a> triggers. Upon return from the function, pointers to triggered objects are placed in the 'out_events' buffer and the return value from the function indicates number of these objects which have triggered. Note, that it does not change the readiness state of non-triggered objects. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">out_events</td><td>- pointer to buffer where to put pointers to triggered <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects. The buffer will not be initialized to 0's by this function. The buffer shall be large enough to hold maxmimum number of Waitables this <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a> can hold. It is valid to pass 0 pointer, in that case this argument will not be used. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of objects triggered. NOTE: for some reason, on Windows it can return 0 objects triggered. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></td><td>- in case of errors. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a112d3ab74291753be3dabc0cef86ccbf"></a><!-- doxytag: member="ting::WaitSet::WaitWithTimeout" ref="a112d3ab74291753be3dabc0cef86ccbf" args="(u32 timeout, Buffer&lt; Waitable * &gt; *out_events=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classting_1_1WaitSet.htm#a112d3ab74291753be3dabc0cef86ccbf">ting::WaitSet::WaitWithTimeout</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>&#160;</td>
          <td class="paramname"><em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classting_1_1Buffer.htm">Buffer</a>&lt; <a class="el" href="classting_1_1Waitable.htm">Waitable</a> * &gt; *&#160;</td>
          <td class="paramname"><em>out_events</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>wait for event with timeout. </p>
<p>The same as <a class="el" href="classting_1_1WaitSet.htm#a9f6d4ac786e9a731abcda2242b59bf39" title="wait for event.">Wait()</a> function, but takes wait timeout as parameter. Thus, this function will wait for any event or timeout. Note, that it guarantees that it will wait AT LEAST for specified number of milliseconds, or more. This is because of implementation for linux, if wait is interrupted by signal it will start waiting again, and so on. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">timeout</td><td>- maximum time in milliseconds to wait for event. </td></tr>
    <tr><td class="paramname">out_events</td><td>- pointer to buffer where to put pointers to triggered <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> objects. The buffer size must be equal or greater than the number ow waitables currently added to the wait set. This pointer can be 0, if you are not interested in list of triggered waitables. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of objects triggered. If 0 then timeout was hit. NOTE: for some reason, on Windows it can return 0 before timeout was hit. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classting_1_1Exc.htm" title="Basic exception class.">ting::Exc</a></td><td>- in case of errors. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1WaitSet.htm">WaitSet</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:37 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
