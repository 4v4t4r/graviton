<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: Socket.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('Socket_8hpp.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Socket.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Socket_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* The MIT License:</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2009-2012 Ivan Gagis &lt;igagis@gmail.com&gt;</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE. */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">// Home page: http://ting.googlecode.com</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00031"></a>00031 <span class="preprocessor">#pragma once</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;sstream&gt;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;../config.hpp&quot;</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#if M_OS == M_OS_WINDOWS</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span><span class="preprocessor">#       include &lt;winsock2.h&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#       include &lt;windows.h&gt;</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="preprocessor">#elif M_OS == M_OS_LINUX || M_OS == M_OS_MACOSX || M_OS == M_OS_SOLARIS</span>
<a name="l00045"></a>00045 <span class="preprocessor"></span><span class="preprocessor">#       include &lt;sys/socket.h&gt;</span>
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="preprocessor">#else</span>
<a name="l00048"></a>00048 <span class="preprocessor"></span><span class="preprocessor">#       error &quot;Unsupported OS&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="net_2Exc_8hpp.htm">Exc.hpp</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;../WaitSet.hpp&quot;</span>
<a name="l00055"></a>00055 <span class="preprocessor">#include &quot;../debug.hpp&quot;</span>
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 
<a name="l00063"></a>00063 <span class="keyword">namespace </span>ting{
<a name="l00064"></a>00064 <span class="keyword">namespace </span>net{
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 
<a name="l00072"></a><a class="code" href="classting_1_1net_1_1Socket.htm">00072</a> <span class="keyword">class </span><a class="code" href="classting_1_1net_1_1Socket.htm" title="Basic socket class.">Socket</a> : <span class="keyword">public</span> <a class="code" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>{
<a name="l00073"></a>00073 <span class="keyword">protected</span>:
<a name="l00074"></a>00074 <span class="preprocessor">#if M_OS == M_OS_WINDOWS</span>
<a name="l00075"></a>00075 <span class="preprocessor"></span>        <span class="keyword">typedef</span> SOCKET T_Socket;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077         <span class="keyword">inline</span> <span class="keyword">static</span> T_Socket DInvalidSocket(){
<a name="l00078"></a>00078                 <span class="keywordflow">return</span> INVALID_SOCKET;
<a name="l00079"></a>00079         }
<a name="l00080"></a>00080 
<a name="l00081"></a>00081         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DSocketError(){
<a name="l00082"></a>00082                 <span class="keywordflow">return</span> SOCKET_ERROR;
<a name="l00083"></a>00083         }
<a name="l00084"></a>00084 
<a name="l00085"></a>00085         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEIntr(){
<a name="l00086"></a>00086                 <span class="keywordflow">return</span> WSAEINTR;
<a name="l00087"></a>00087         }
<a name="l00088"></a>00088         
<a name="l00089"></a>00089         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEAgain(){
<a name="l00090"></a>00090                 <span class="keywordflow">return</span> WSAEWOULDBLOCK;
<a name="l00091"></a>00091         }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEInProgress(){
<a name="l00094"></a>00094                 <span class="keywordflow">return</span> WSAEWOULDBLOCK;
<a name="l00095"></a>00095         }
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="preprocessor">#elif M_OS == M_OS_LINUX || M_OS == M_OS_MACOSX || M_OS == M_OS_SOLARIS</span>
<a name="l00098"></a>00098 <span class="preprocessor"></span>        <span class="keyword">typedef</span> <span class="keywordtype">int</span> T_Socket;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100         <span class="keyword">inline</span> <span class="keyword">static</span> T_Socket DInvalidSocket(){
<a name="l00101"></a>00101                 <span class="keywordflow">return</span> -1;
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104         <span class="keyword">inline</span> <span class="keyword">static</span> T_Socket DSocketError(){
<a name="l00105"></a>00105                 <span class="keywordflow">return</span> -1;
<a name="l00106"></a>00106         }
<a name="l00107"></a>00107 
<a name="l00108"></a>00108         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEIntr(){
<a name="l00109"></a>00109                 <span class="keywordflow">return</span> EINTR;
<a name="l00110"></a>00110         }
<a name="l00111"></a>00111 
<a name="l00112"></a>00112         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEAgain(){
<a name="l00113"></a>00113                 <span class="keywordflow">return</span> EAGAIN;
<a name="l00114"></a>00114         }
<a name="l00115"></a>00115 
<a name="l00116"></a>00116         <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">int</span> DEInProgress(){
<a name="l00117"></a>00117                 <span class="keywordflow">return</span> EINPROGRESS;
<a name="l00118"></a>00118         }
<a name="l00119"></a>00119 <span class="preprocessor">#else</span>
<a name="l00120"></a>00120 <span class="preprocessor"></span><span class="preprocessor">#       error &quot;Unsupported OS&quot;</span>
<a name="l00121"></a>00121 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00122"></a>00122 <span class="preprocessor"></span>
<a name="l00123"></a>00123 <span class="preprocessor">#if M_OS == M_OS_WINDOWS</span>
<a name="l00124"></a>00124 <span class="preprocessor"></span>        WSAEVENT eventForWaitable;
<a name="l00125"></a>00125 <span class="preprocessor">#endif</span>
<a name="l00126"></a>00126 <span class="preprocessor"></span>
<a name="l00127"></a><a class="code" href="classting_1_1net_1_1Socket.htm#ac115d0ac864696a232f9aec582f4fbaa">00127</a>         T_Socket <a class="code" href="classting_1_1net_1_1Socket.htm#ac115d0ac864696a232f9aec582f4fbaa">socket</a>;
<a name="l00128"></a>00128 
<a name="l00129"></a><a class="code" href="classting_1_1net_1_1Socket.htm#a426bb11dd1e6245a6f06fe9c61958c81">00129</a>         <a class="code" href="classting_1_1net_1_1Socket.htm#a426bb11dd1e6245a6f06fe9c61958c81">Socket</a>() :
<a name="l00130"></a>00130 #if <a class="code" href="config_8hpp.htm#a87150211e85597a448907e1d5fe07a2c">M_OS</a> == <a class="code" href="config_8hpp.htm#acb954902e4c2ae974098ae7d9c5bef3e">M_OS_WINDOWS</a>
<a name="l00131"></a>00131                         eventForWaitable(WSA_INVALID_EVENT),
<a name="l00132"></a>00132 #endif
<a name="l00133"></a>00133                         <a class="code" href="classting_1_1net_1_1Socket.htm#ac115d0ac864696a232f9aec582f4fbaa">socket</a>(DInvalidSocket())
<a name="l00134"></a>00134         {
<a name="l00135"></a>00135 <span class="comment">//              TRACE(&lt;&lt; &quot;Socket::Socket(): invoked &quot; &lt;&lt; this &lt;&lt; std::endl)</span>
<a name="l00136"></a>00136         }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 
<a name="l00140"></a>00140         <span class="comment">//same as std::auto_ptr</span>
<a name="l00141"></a>00141         <a class="code" href="classting_1_1net_1_1Socket.htm" title="Basic socket class.">Socket</a>&amp; <a class="code" href="classting_1_1net_1_1Socket.htm#ad427eb8411f7bc0b209f4899ff46edc0">operator=</a>(<span class="keyword">const</span> <a class="code" href="classting_1_1net_1_1Socket.htm" title="Basic socket class.">Socket</a>&amp; s);
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 
<a name="l00144"></a>00144 
<a name="l00145"></a>00145         <span class="keywordtype">void</span> <a class="code" href="classting_1_1net_1_1Socket.htm#a46b1750ad05b949878badde3ae699ed1">DisableNaggle</a>();
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 
<a name="l00149"></a>00149         <span class="keywordtype">void</span> <a class="code" href="classting_1_1net_1_1Socket.htm#a3d0bf7a3dc36ab266333299db2927930">SetNonBlockingMode</a>();
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="keyword">public</span>:
<a name="l00154"></a>00154         <a class="code" href="classting_1_1net_1_1Socket.htm#a426bb11dd1e6245a6f06fe9c61958c81">Socket</a>(<span class="keyword">const</span> <a class="code" href="classting_1_1net_1_1Socket.htm" title="Basic socket class.">Socket</a>&amp; s);
<a name="l00155"></a>00155 
<a name="l00156"></a>00156         
<a name="l00157"></a>00157         
<a name="l00158"></a>00158         <span class="keyword">virtual</span> <a class="code" href="classting_1_1net_1_1Socket.htm#a910d4ec3852fa22467d0c88b2e67d308">~Socket</a>()throw();
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 
<a name="l00166"></a><a class="code" href="classting_1_1net_1_1Socket.htm#a9cc2d5ba8fda839c7339fef269f6ecfd">00166</a>         inline <span class="keywordtype">bool</span> <a class="code" href="classting_1_1net_1_1Socket.htm#a9cc2d5ba8fda839c7339fef269f6ecfd" title="Tells whether the socket is opened or not.">IsValid</a>()<span class="keyword">const</span>{
<a name="l00167"></a>00167                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1net_1_1Socket.htm#ac115d0ac864696a232f9aec582f4fbaa">socket</a> != DInvalidSocket();
<a name="l00168"></a>00168         }
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 
<a name="l00171"></a>00171 
<a name="l00176"></a><a class="code" href="classting_1_1net_1_1Socket.htm#af4342e2cb1d7a542e6f7c91bacb94b44">00176</a>         <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classting_1_1net_1_1Socket.htm#af4342e2cb1d7a542e6f7c91bacb94b44" title="Tells whether the socket is opened or not.">IsNotValid</a>()<span class="keyword">const</span>{
<a name="l00177"></a>00177                 <span class="keywordflow">return</span> !this-&gt;<a class="code" href="classting_1_1net_1_1Socket.htm#a9cc2d5ba8fda839c7339fef269f6ecfd" title="Tells whether the socket is opened or not.">IsValid</a>();
<a name="l00178"></a>00178         }
<a name="l00179"></a>00179 
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00185"></a>00185         <span class="keywordtype">void</span> <a class="code" href="classting_1_1net_1_1Socket.htm#a2d58f8ac623a0b3e3b5675190fd24e13" title="Closes the socket disconnecting it if necessary.">Close</a>()throw();
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 
<a name="l00188"></a>00188 
<a name="l00194"></a>00194         <a class="code" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906" title="Unsigned 16 bit type.">u16</a> <a class="code" href="classting_1_1net_1_1Socket.htm#a1a3672edbdf1babdfcacc036915b2174" title="Returns local port this socket is bound to.">GetLocalPort</a>();
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 <span class="preprocessor">#if M_OS == M_OS_WINDOWS</span>
<a name="l00199"></a>00199 <span class="preprocessor"></span><span class="keyword">private</span>:
<a name="l00200"></a>00200         <span class="comment">//override</span>
<a name="l00201"></a>00201         HANDLE GetHandle();
<a name="l00202"></a>00202 
<a name="l00203"></a>00203         <span class="comment">//override</span>
<a name="l00204"></a>00204         <span class="keywordtype">bool</span> CheckSignaled();
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 <span class="keyword">protected</span>:
<a name="l00207"></a>00207         <span class="keywordtype">void</span> CreateEventForWaitable();
<a name="l00208"></a>00208 
<a name="l00209"></a>00209         <span class="keywordtype">void</span> CloseEventForWaitable();
<a name="l00210"></a>00210 
<a name="l00211"></a>00211         <span class="keywordtype">void</span> SetWaitingEventsForWindows(<span class="keywordtype">long</span> flags);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213 
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 <span class="preprocessor">#elif M_OS == M_OS_LINUX || M_OS == M_OS_MACOSX || M_OS == M_OS_SOLARIS</span>
<a name="l00216"></a>00216 <span class="preprocessor"></span><span class="keyword">private</span>:
<a name="l00217"></a>00217         <span class="comment">//override</span>
<a name="l00218"></a>00218         <span class="keywordtype">int</span> GetHandle();
<a name="l00219"></a>00219 <span class="preprocessor">#else</span>
<a name="l00220"></a>00220 <span class="preprocessor"></span><span class="preprocessor">        #error &quot;Unsupported OS&quot;</span>
<a name="l00221"></a>00221 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00222"></a>00222 <span class="preprocessor"></span>};<span class="comment">//~class Socket</span>
<a name="l00223"></a>00223 
<a name="l00224"></a>00224 
<a name="l00225"></a>00225 
<a name="l00226"></a>00226 }<span class="comment">//~namespace</span>
<a name="l00227"></a>00227 }<span class="comment">//~namespace</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="Socket_8hpp.htm">Socket.hpp</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:35 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
