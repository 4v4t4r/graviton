<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: Buffer.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('Buffer_8hpp.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Buffer.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Buffer_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* The MIT License:</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2009-2012 Ivan Gagis &lt;igagis@gmail.com&gt;</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE. */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">// Home page: http://ting.googlecode.com</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00033"></a>00033 <span class="preprocessor">#pragma once</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span>
<a name="l00035"></a>00035 <span class="preprocessor">#ifdef DEBUG</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span><span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#endif</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="types_8hpp.htm" title="General types definitions.">types.hpp</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="debug_8hpp.htm">debug.hpp</a>&quot;</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">namespace </span>ting{
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 
<a name="l00052"></a><a class="code" href="classting_1_1Buffer.htm">00052</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>{
<a name="l00053"></a>00053 
<a name="l00054"></a>00054         <span class="comment">//forbid copying</span>
<a name="l00055"></a>00055         <span class="keyword">inline</span> <a class="code" href="classting_1_1Buffer.htm#a91a88a3ab2c44cac2153770203c8a04d" title="Default constructor.">Buffer</a>(<span class="keyword">const</span> <a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&amp;);
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">protected</span>:
<a name="l00058"></a><a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">00058</a>         T* <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>;
<a name="l00059"></a><a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">00059</a>         <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">size</a>;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 
<a name="l00066"></a><a class="code" href="classting_1_1Buffer.htm#a91a88a3ab2c44cac2153770203c8a04d">00066</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1Buffer.htm#a91a88a3ab2c44cac2153770203c8a04d" title="Default constructor.">Buffer</a>(){}
<a name="l00067"></a>00067 
<a name="l00078"></a><a class="code" href="classting_1_1Buffer.htm#aec4f0d7554d832c8b27a1412f93bd818">00078</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&amp; <a class="code" href="classting_1_1Buffer.htm#aec4f0d7554d832c8b27a1412f93bd818" title="Assignment operator.">operator=</a>(<span class="keyword">const</span> <a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&amp;){
<a name="l00079"></a>00079                 <span class="comment">//do nothing</span>
<a name="l00080"></a>00080                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00081"></a>00081         }
<a name="l00082"></a>00082 <span class="keyword">public</span>:
<a name="l00090"></a><a class="code" href="classting_1_1Buffer.htm#a1856044f60aed92d01e9cfa70edc8262">00090</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1Buffer.htm#a91a88a3ab2c44cac2153770203c8a04d" title="Default constructor.">Buffer</a>(T* bufPtr, <span class="keywordtype">size_t</span> bufSize)<span class="keywordflow">throw</span>() :
<a name="l00091"></a>00091                         <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>(bufPtr),
<a name="l00092"></a>00092                         <a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">size</a>(bufSize)
<a name="l00093"></a>00093         {}
<a name="l00094"></a>00094 
<a name="l00099"></a><a class="code" href="classting_1_1Buffer.htm#ad7c1abf3c373b47f463f2bca7785172e">00099</a>         <span class="keyword">inline</span> <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1Buffer.htm#ad7c1abf3c373b47f463f2bca7785172e" title="get buffer size.">Size</a>()<span class="keyword">const</span> throw(){
<a name="l00100"></a>00100                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">size</a>;
<a name="l00101"></a>00101         }
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 
<a name="l00109"></a><a class="code" href="classting_1_1Buffer.htm#ab39dfe3286049c328219b3c207908846">00109</a>         <span class="keyword">inline</span> <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1Buffer.htm#ab39dfe3286049c328219b3c207908846" title="get size of element.">SizeOfElem</a>()<span class="keyword">const</span> throw(){
<a name="l00110"></a>00110                 <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>[0]);
<a name="l00111"></a>00111         }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 
<a name="l00114"></a>00114 
<a name="l00119"></a><a class="code" href="classting_1_1Buffer.htm#af269a7ec5afa6d8b0430934eef1ca748">00119</a>         <span class="keyword">inline</span> <span class="keywordtype">size_t</span> <a class="code" href="classting_1_1Buffer.htm#af269a7ec5afa6d8b0430934eef1ca748" title="get size of buffer in bytes.">SizeInBytes</a>()<span class="keyword">const</span> throw(){
<a name="l00120"></a>00120                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ad7c1abf3c373b47f463f2bca7785172e" title="get buffer size.">Size</a>() * this-&gt;<a class="code" href="classting_1_1Buffer.htm#ab39dfe3286049c328219b3c207908846" title="get size of element.">SizeOfElem</a>();
<a name="l00121"></a>00121         }
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 
<a name="l00131"></a><a class="code" href="classting_1_1Buffer.htm#a6b58fe5c9b4a7a8e9427c2d68866db12">00131</a>         <span class="keyword">inline</span> T&amp; <a class="code" href="classting_1_1Buffer.htm#a6b58fe5c9b4a7a8e9427c2d68866db12" title="access specified element of the buffer.">operator[]</a>(<span class="keywordtype">size_t</span> i)<span class="keyword">const</span> <span class="keywordflow">throw</span>(){
<a name="l00132"></a>00132                 <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(i &lt; this-&gt;<a class="code" href="classting_1_1Buffer.htm#ad7c1abf3c373b47f463f2bca7785172e" title="get buffer size.">Size</a>())
<a name="l00133"></a>00133                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>[i];
<a name="l00134"></a>00134         }
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 
<a name="l00143"></a><a class="code" href="classting_1_1Buffer.htm#a22b6ace6d763a6bf9b9c6a146d319707">00143</a>         <span class="keyword">inline</span> T&amp; <a class="code" href="classting_1_1Buffer.htm#a22b6ace6d763a6bf9b9c6a146d319707" title="access specified element of the buffer.">operator[]</a>(<span class="keywordtype">size_t</span> i)<span class="keywordflow">throw</span>(){
<a name="l00144"></a>00144                 <a class="code" href="debug_8hpp.htm#aaf04cfaa53d7b0bfcdeec60eaf7eed3a">ASSERT_INFO</a>(i &lt; this-&gt;<a class="code" href="classting_1_1Buffer.htm#ad7c1abf3c373b47f463f2bca7785172e" title="get buffer size.">Size</a>(), <span class="stringliteral">&quot;operator[]: index out of bounds&quot;</span>)
<a name="l00145"></a>00145                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>[i];
<a name="l00146"></a>00146         }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00154"></a><a class="code" href="classting_1_1Buffer.htm#a594bc8aad83c33c9442d48a4a5cda49c">00154</a>         <span class="keyword">inline</span> T* <a class="code" href="classting_1_1Buffer.htm#a594bc8aad83c33c9442d48a4a5cda49c" title="get pointer to first element of the buffer.">Begin</a>()throw(){
<a name="l00155"></a>00155                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>;
<a name="l00156"></a>00156         }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 
<a name="l00164"></a><a class="code" href="classting_1_1Buffer.htm#a936a9e66b0c7eef93ca320baac5ca881">00164</a>         <span class="keyword">inline</span> T* <a class="code" href="classting_1_1Buffer.htm#a936a9e66b0c7eef93ca320baac5ca881" title="get pointer to first element of the buffer.">Begin</a>()<span class="keyword">const</span> throw(){
<a name="l00165"></a>00165                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>;
<a name="l00166"></a>00166         }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 
<a name="l00174"></a><a class="code" href="classting_1_1Buffer.htm#a3020030e107f4e8025c533cdb767e5e1">00174</a>         <span class="keyword">inline</span> T* <a class="code" href="classting_1_1Buffer.htm#a3020030e107f4e8025c533cdb767e5e1" title="get pointer to &quot;after last&quot; element of the buffer.">End</a>()throw(){
<a name="l00175"></a>00175                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a> + this-&gt;<a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">size</a>;
<a name="l00176"></a>00176         }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 
<a name="l00179"></a>00179 
<a name="l00184"></a><a class="code" href="classting_1_1Buffer.htm#a8fad488db076a3f7a5be4f9ded6283d6">00184</a>         <span class="keyword">inline</span> T* <a class="code" href="classting_1_1Buffer.htm#a8fad488db076a3f7a5be4f9ded6283d6" title="get const pointer to &quot;after last&quot; element of the buffer.">End</a>()<span class="keyword">const</span> throw(){
<a name="l00185"></a>00185                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a> + this-&gt;<a class="code" href="classting_1_1Buffer.htm#a75d5caa8c67957c1dced20694bf9ebbf">size</a>;
<a name="l00186"></a>00186         }
<a name="l00187"></a>00187 
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 
<a name="l00196"></a><a class="code" href="classting_1_1Buffer.htm#ab4c007b7e501e17cf4deed62645dc1cd">00196</a>         <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classting_1_1Buffer.htm#ab4c007b7e501e17cf4deed62645dc1cd" title="Checks if pointer points somewhere within the buffer.">Overlaps</a>(<span class="keyword">const</span> T* p)<span class="keyword">const</span> <span class="keywordflow">throw</span>(){
<a name="l00197"></a>00197                 <span class="keywordflow">return</span> this-&gt;<a class="code" href="classting_1_1Buffer.htm#a594bc8aad83c33c9442d48a4a5cda49c" title="get pointer to first element of the buffer.">Begin</a>() &lt;= p &amp;&amp; p &lt;= (this-&gt;<a class="code" href="classting_1_1Buffer.htm#a3020030e107f4e8025c533cdb767e5e1" title="get pointer to &quot;after last&quot; element of the buffer.">End</a>() - 1);
<a name="l00198"></a>00198         }
<a name="l00199"></a>00199 
<a name="l00200"></a>00200 
<a name="l00201"></a>00201 
<a name="l00202"></a><a class="code" href="classting_1_1Buffer.htm#a3c5d1c62d889b83ffeaf91124f4f3d9d">00202</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1Buffer.htm#a3c5d1c62d889b83ffeaf91124f4f3d9d">operator const Buffer&lt;const T&gt;&amp; </a>()<span class="keyword">const</span> throw(){
<a name="l00203"></a>00203                 <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer&lt;const T&gt;</a>* <span class="keyword">&gt;</span>(<span class="keyword">this</span>);
<a name="l00204"></a>00204         }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="preprocessor">#ifdef DEBUG</span>
<a name="l00208"></a>00208 <span class="preprocessor"></span>        <span class="keyword">friend</span> std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const Buffer&lt;T&gt;&amp; <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>){
<a name="l00209"></a>00209                 <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>.Size(); ++i){
<a name="l00210"></a>00210                         s &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>[i] &lt;&lt; std::endl;
<a name="l00211"></a>00211                 }
<a name="l00212"></a>00212                 <span class="keywordflow">return</span> s;
<a name="l00213"></a>00213         }
<a name="l00214"></a>00214 <span class="preprocessor">#endif</span>
<a name="l00215"></a>00215 <span class="preprocessor"></span>};<span class="comment">//~template class Buffer</span>
<a name="l00216"></a>00216 
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 
<a name="l00223"></a><a class="code" href="classting_1_1StaticBuffer.htm">00223</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keywordtype">size_t</span> bufSize&gt; <span class="keyword">class </span><a class="code" href="classting_1_1StaticBuffer.htm" title="static buffer class template.">StaticBuffer</a> : <span class="keyword">public</span> ting::<a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&lt;T&gt;{
<a name="l00224"></a>00224         T staticBuffer[bufSize];
<a name="l00225"></a>00225 <span class="keyword">public</span>:
<a name="l00226"></a><a class="code" href="classting_1_1StaticBuffer.htm#a3ce147d2c13ec5e34b15df2a851785ae">00226</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1StaticBuffer.htm#a3ce147d2c13ec5e34b15df2a851785ae">StaticBuffer</a>() :
<a name="l00227"></a>00227                         ting::<a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&lt;T&gt;(staticBuffer, bufSize)
<a name="l00228"></a>00228         {}
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 
<a name="l00237"></a><a class="code" href="classting_1_1StaticBuffer.htm#a5c5d89a11c479f7400de32568785ff4c">00237</a>         <span class="keyword">inline</span> <a class="code" href="classting_1_1StaticBuffer.htm#a3ce147d2c13ec5e34b15df2a851785ae">StaticBuffer</a>(<span class="keyword">const</span> <a class="code" href="classting_1_1StaticBuffer.htm" title="static buffer class template.">StaticBuffer&lt;T, bufSize&gt;</a>&amp; <a class="code" href="classting_1_1Buffer.htm#ae13b3c27ddb6755a2f5a74785dbc01e8">buf</a>) :
<a name="l00238"></a>00238                         ting::<a class="code" href="classting_1_1Buffer.htm" title="Memory buffer wrapper template class.">Buffer</a>&lt;T&gt;(staticBuffer, bufSize),
<a name="l00239"></a>00239                         staticBuffer(buf.staticBuffer)
<a name="l00240"></a>00240         {}
<a name="l00241"></a>00241 };
<a name="l00242"></a>00242 
<a name="l00243"></a>00243 
<a name="l00244"></a>00244 
<a name="l00245"></a>00245 }<span class="comment">//~namespace</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="Buffer_8hpp.htm">Buffer.hpp</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:35 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
