<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::WeakRef&lt; T &gt; Class Template Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1WeakRef.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::WeakRef&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::WeakRef" -->
<p>Weak Reference to a reference counted object.  
 <a href="classting_1_1WeakRef.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Ref_8hpp_source.htm">Ref.hpp</a>&gt;</code></p>

<p><a href="classting_1_1WeakRef-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#ae23764f2bada07f850ceb181876c86e1">WeakRef</a> ()  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create initially invalid weak reference.  <a href="#ae23764f2bada07f850ceb181876c86e1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#aba7ce767a36c7c3cf1314033ecbede0c">WeakRef</a> (T *rc)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Make weak reference from pointer to <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a>.  <a href="#aba7ce767a36c7c3cf1314033ecbede0c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#aba4a29bb8e23c6df5d42b33492935e63">WeakRef</a> (const <a class="el" href="classting_1_1Ref.htm">Ref</a>&lt; T &gt; &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aba4a29bb8e23c6df5d42b33492935e63"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#aa4098bc06fcc6ed6073319c52190f19e">WeakRef</a> (const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#aa4098bc06fcc6ed6073319c52190f19e"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class TS &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#afd9154218666496ae6fed7d249792720">WeakRef</a> (const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; TS &gt; &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#afd9154218666496ae6fed7d249792720"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1Ref.htm">Ref</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#afa0f296d417ecc60217f9a52dec489f4">GetRef</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get strong reference.  <a href="#afa0f296d417ecc60217f9a52dec489f4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#a801e201de14e8611b2fda0d35fcab6b9">~WeakRef</a> ()  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a801e201de14e8611b2fda0d35fcab6b9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#ab87fe78f5eff92b8fa9729c0f0c7bc10">operator=</a> (T *rc)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">operator =.  <a href="#ab87fe78f5eff92b8fa9729c0f0c7bc10"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#ad2478353dd324b624c7c73f6e353e5fc">operator=</a> (const <a class="el" href="classting_1_1Ref.htm">Ref</a>&lt; T &gt; &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">operator =.  <a href="#ad2478353dd324b624c7c73f6e353e5fc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#a05ccddae011a6ede36644676fc18931e">operator=</a> (const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a05ccddae011a6ede36644676fc18931e"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class TS &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#a0558bdaa41613a579765e49372c765a4">operator=</a> (const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; TS &gt; &amp;r)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Template operator =.  <a href="#a0558bdaa41613a579765e49372c765a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#a8d2de0dbf511eee48ca406f7d55dd56b">Reset</a> ()  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset this reference.  <a href="#a8d2de0dbf511eee48ca406f7d55dd56b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1WeakRef.htm#a4cd35054ace253769e97d31612df72bd">IsSurelyInvalid</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if this weak reference is invalid.  <a href="#a4cd35054ace253769e97d31612df72bd"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br/>
class ting::WeakRef&lt; T &gt;</h3>

<p>Weak Reference to a reference counted object. </p>
<p>A weak reference to reference counted object. The object is destroyed as soon as there are no references to the object, even if there are weak references. Thus, weak reference can point to some object but pointing to that object cannot prevent deletion of this object. To work with the object one needs to construct a hard reference (<a class="el" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref</a>) to that object first, a hard reference can be constructed from weak reference: </p>
<div class="fragment"><pre class="fragment">        <a class="code" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref&lt;TestCalss&gt;</a> t = TestClass::New();
        
        <a class="code" href="classting_1_1WeakRef.htm" title="Weak Reference to a reference counted object.">ting::WeakRef&lt;TestClass&gt;</a> weakt = t; <span class="comment">//weakt points to object</span>
 
        <span class="comment">//...</span>
 
        <span class="keywordflow">if</span>(<a class="code" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref&lt;TestClass&gt;</a> obj = weakt){
                <span class="comment">//object still exists</span>
                obj-&gt;DoSomething();
        }

        t.<a class="code" href="classting_1_1Ref.htm#ace1da4fd1b0a5d743cb8070f91bbdf2a" title="make this ting::Ref invalid.">Reset</a>();<span class="comment">//destroy the object</span>
        <span class="comment">//the object of class TestClass will be destroyed here,</span>
        <span class="comment">//despite there is a weak reference to that object.</span>
        <span class="comment">//From now on, the weak reference does not point to any object.</span>

        <span class="keywordflow">if</span>(<a class="code" href="classting_1_1Ref.htm" title="Reference to a reference counted object.">ting::Ref&lt;TestClass&gt;</a> obj = weakt){
                <span class="comment">//we will not get there</span>
                <a class="code" href="debug_8hpp.htm#aca68c0d4ac8df0838e209fb5300f7be3">ASSERT</a>(<span class="keyword">false</span>)
        }
</pre></div> </div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ae23764f2bada07f850ceb181876c86e1"></a><!-- doxytag: member="ting::WeakRef::WeakRef" ref="ae23764f2bada07f850ceb181876c86e1" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create initially invalid weak reference. </p>

</div>
</div>
<a class="anchor" id="aba7ce767a36c7c3cf1314033ecbede0c"></a><!-- doxytag: member="ting::WeakRef::WeakRef" ref="aba7ce767a36c7c3cf1314033ecbede0c" args="(T *rc)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>rc</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Make weak reference from pointer to <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a>. </p>
<p>This constructor makes a weak reference from ordinary pointer to a <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a> object. Mainly, weak references should be constructed this way only from within the constructor of the class derived from <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a>. This is because in constructor it is sometimes needed to create a weak reference to the object itself and there is no any strong references to the object yet because the object is still under construction. But, it is safe to create weak references already, since first strong reference should normally be created shortly after the object has finished construction. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rc</td><td>- ordinary pointer to a <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a> object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aba4a29bb8e23c6df5d42b33492935e63"></a><!-- doxytag: member="ting::WeakRef::WeakRef" ref="aba4a29bb8e23c6df5d42b33492935e63" args="(const Ref&lt; T &gt; &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Ref.htm">Ref</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>
<p>Creates weak reference from strong reference. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa4098bc06fcc6ed6073319c52190f19e"></a><!-- doxytag: member="ting::WeakRef::WeakRef" ref="aa4098bc06fcc6ed6073319c52190f19e" args="(const WeakRef &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>- weak reference to copy from. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afd9154218666496ae6fed7d249792720"></a><!-- doxytag: member="ting::WeakRef::WeakRef" ref="afd9154218666496ae6fed7d249792720" args="(const WeakRef&lt; TS &gt; &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class TS &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; TS &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>
<p>Template constructor for automatic type down-casting and const-casting. Normally, this constructor should not be used explicitly. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>- weak reference to copy from. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a801e201de14e8611b2fda0d35fcab6b9"></a><!-- doxytag: member="ting::WeakRef::~WeakRef" ref="a801e201de14e8611b2fda0d35fcab6b9" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::~<a class="el" href="classting_1_1WeakRef.htm">WeakRef</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="afa0f296d417ecc60217f9a52dec489f4"></a><!-- doxytag: member="ting::WeakRef::GetRef" ref="afa0f296d417ecc60217f9a52dec489f4" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1Ref.htm">Ref</a>&lt;T&gt; <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm#afa0f296d417ecc60217f9a52dec489f4">GetRef</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get strong reference. </p>
<p>This is just a convenience method which creates and returns a strong reference from this weak reference. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Strong reference created from this weak reference. </dd></dl>

</div>
</div>
<a class="anchor" id="a4cd35054ace253769e97d31612df72bd"></a><!-- doxytag: member="ting::WeakRef::IsSurelyInvalid" ref="a4cd35054ace253769e97d31612df72bd" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm#a4cd35054ace253769e97d31612df72bd">IsSurelyInvalid</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if this weak reference is invalid. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if this weak reference is invalid for sure. </dd>
<dd>
false otherwise which means that is is unknown if this weak ref is valid or not. </dd></dl>

</div>
</div>
<a class="anchor" id="ab87fe78f5eff92b8fa9729c0f0c7bc10"></a><!-- doxytag: member="ting::WeakRef::operator=" ref="ab87fe78f5eff92b8fa9729c0f0c7bc10" args="(T *rc)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&amp; <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>rc</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>operator =. </p>
<p>Re-initializes this weak reference object by assignment of <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a> pointer. This operator is useful when it is necessary to initialize some weak reference from right within the constructor of RefCounted-derived object, thus it is possible to just assign 'this' to the weak reference. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rc</td><td>- pointer to <a class="el" href="classting_1_1RefCounted.htm" title="base class for a reference counted object.">RefCounted</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to this weak reference object. </dd></dl>

</div>
</div>
<a class="anchor" id="ad2478353dd324b624c7c73f6e353e5fc"></a><!-- doxytag: member="ting::WeakRef::operator=" ref="ad2478353dd324b624c7c73f6e353e5fc" args="(const Ref&lt; T &gt; &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&amp; <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Ref.htm">Ref</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>operator =. </p>
<p>Assign this weak reference from a strong reference. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>- strong reference to assign from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to this weak reference object. </dd></dl>

</div>
</div>
<a class="anchor" id="a05ccddae011a6ede36644676fc18931e"></a><!-- doxytag: member="ting::WeakRef::operator=" ref="a05ccddae011a6ede36644676fc18931e" args="(const WeakRef &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&amp; <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assignment operator. </p>
<p>Assign this weak reference from another weak reference. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>- weak reference to assign from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to this weak reference object. </dd></dl>

</div>
</div>
<a class="anchor" id="a0558bdaa41613a579765e49372c765a4"></a><!-- doxytag: member="ting::WeakRef::operator=" ref="a0558bdaa41613a579765e49372c765a4" args="(const WeakRef&lt; TS &gt; &amp;r)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class TS &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&amp; <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>&lt; TS &gt; &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Template operator =. </p>
<p>Template operator = for automatic down-casting and const-casting when assigning this weak reference from another weak reference. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>- weak reference to assign from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to this weak reference object. </dd></dl>

</div>
</div>
<a class="anchor" id="a8d2de0dbf511eee48ca406f7d55dd56b"></a><!-- doxytag: member="ting::WeakRef::Reset" ref="a8d2de0dbf511eee48ca406f7d55dd56b" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1WeakRef.htm">ting::WeakRef</a>&lt; T &gt;::<a class="el" href="classting_1_1WeakRef.htm#a8d2de0dbf511eee48ca406f7d55dd56b">Reset</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reset this reference. </p>
<p>After calling this method the reference becomes invalid, i.e. it does not refer to any object. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Ref_8hpp_source.htm">Ref.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1WeakRef.htm">WeakRef</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:36 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
