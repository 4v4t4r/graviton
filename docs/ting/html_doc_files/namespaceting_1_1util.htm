<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::util Namespace Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.htm"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.htm"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('namespaceting_1_1util.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::util Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#a92613f027958c700b84ed17ebe85bcea">ClampTop</a> (T &amp;<a class="el" href="atomic_8hpp.htm#a06cc42a46c3f1cdf8c7f856fe28fc463">v</a>, const T top)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamp value top.  <a href="#a92613f027958c700b84ed17ebe85bcea"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#aa2070ab534d7f6999345ecf4f099f2be">ClampBottom</a> (T &amp;<a class="el" href="atomic_8hpp.htm#a06cc42a46c3f1cdf8c7f856fe28fc463">v</a>, const T bottom)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamp value bottom.  <a href="#aa2070ab534d7f6999345ecf4f099f2be"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#abee0309fe71090279ad4382a10b0e684">Serialize16LE</a> (<a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a> value, <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *out_buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">serialize 16 bit value, little-endian.  <a href="#abee0309fe71090279ad4382a10b0e684"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#a83ab06ea7b2f939050213915959ac43c">Serialize32LE</a> (<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> value, <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *out_buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">serialize 32 bit value, little-endian.  <a href="#a83ab06ea7b2f939050213915959ac43c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#ab01ecd0dbbf73476df4a61e2e166b2df">Deserialize16LE</a> (const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">de-serialize 16 bit value, little-endian.  <a href="#ab01ecd0dbbf73476df4a61e2e166b2df"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#a6ab2e22ee7e2027f584e38a064949028">Deserialize32LE</a> (const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">de-serialize 32 bit value, little-endian.  <a href="#a6ab2e22ee7e2027f584e38a064949028"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#ac11d029718681c20d79a6cfc15104fd0">Serialize16BE</a> (<a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a> value, <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *out_buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">serialize 16 bit value, big-endian.  <a href="#ac11d029718681c20d79a6cfc15104fd0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#aa5e04e47738f97764fb0483c2119aa4c">Serialize32BE</a> (<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> value, <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *out_buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">serialize 32 bit value, big-endian.  <a href="#aa5e04e47738f97764fb0483c2119aa4c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#a287180a9cb89f5c8a6d060e27f281727">Deserialize16BE</a> (const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">de-serialize 16 bit value, big-endian.  <a href="#a287180a9cb89f5c8a6d060e27f281727"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceting_1_1util.htm#adebbff7e07d2ecf54610eff898545394">Deserialize32BE</a> (const <a class="el" href="namespaceting.htm#a2debe052f64b3825ad3e8e3ee1861e66">u8</a> *buf)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">de-serialize 32 bit value, big-endian.  <a href="#adebbff7e07d2ecf54610eff898545394"></a><br/></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="aa2070ab534d7f6999345ecf4f099f2be"></a><!-- doxytag: member="ting::util::ClampBottom" ref="aa2070ab534d7f6999345ecf4f099f2be" args="(T &amp;v, const T bottom)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#aa2070ab534d7f6999345ecf4f099f2be">ting::util::ClampBottom</a> </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>bottom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clamp value bottom. </p>
<p>Usage is analogous to ting::ClampTop. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">v</td><td>- reference to the value which bottom is to be clamped. </td></tr>
    <tr><td class="paramname">bottom</td><td>- value to clamp the bottom to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a92613f027958c700b84ed17ebe85bcea"></a><!-- doxytag: member="ting::util::ClampTop" ref="a92613f027958c700b84ed17ebe85bcea" args="(T &amp;v, const T top)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#a92613f027958c700b84ed17ebe85bcea">ting::util::ClampTop</a> </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>top</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clamp value top. </p>
<p>This inline template function can be used to clamp the top of the value. Example: </p>
<div class="fragment"><pre class="fragment"> <span class="keywordtype">int</span> a = 30;

 <span class="comment">//Clamp to 40. Value of &#39;a&#39; remains unchanged,</span>
 <span class="comment">//since it is already less than 40.</span>
 <a class="code" href="namespaceting_1_1util.htm#a92613f027958c700b84ed17ebe85bcea" title="Clamp value top.">ting::ClampTop</a>(a, 40);
 std::cout &lt;&lt; a &lt;&lt; std::endl;

 <span class="comment">//Clamp to 27. Value of &#39;a&#39; is changed to 27,</span>
 <span class="comment">//since it is 30 which is greater than 27.</span>
 <a class="code" href="namespaceting_1_1util.htm#a92613f027958c700b84ed17ebe85bcea" title="Clamp value top.">ting::ClampTop</a>(a, 27);
 std::cout &lt;&lt; a &lt;&lt; std::endl;
</pre></div><p> As a result, this will print: </p>
<div class="fragment"><pre class="fragment"> 30
 27
</pre></div> <dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">v</td><td>- reference to the value which top is to be clamped. </td></tr>
    <tr><td class="paramname">top</td><td>- value to clamp the top to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a287180a9cb89f5c8a6d060e27f281727"></a><!-- doxytag: member="ting::util::Deserialize16BE" ref="a287180a9cb89f5c8a6d060e27f281727" args="(const u8 *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a> <a class="el" href="namespaceting_1_1util.htm#a287180a9cb89f5c8a6d060e27f281727">ting::util::Deserialize16BE</a> </td>
          <td>(</td>
          <td class="paramtype">const u8 *&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>de-serialize 16 bit value, big-endian. </p>
<p>De-serialize 16 bit value from the sequence of bytes. Assume that most significant byte goes first in the input byte sequence. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to buffer containing 2 bytes to convert from big-endian format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>16 bit unsigned integer converted from big-endian byte order to native byte order. </dd></dl>

</div>
</div>
<a class="anchor" id="ab01ecd0dbbf73476df4a61e2e166b2df"></a><!-- doxytag: member="ting::util::Deserialize16LE" ref="ab01ecd0dbbf73476df4a61e2e166b2df" args="(const u8 *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#ab6db9a617ea99ab580a064cef5030906">u16</a> <a class="el" href="namespaceting_1_1util.htm#ab01ecd0dbbf73476df4a61e2e166b2df">ting::util::Deserialize16LE</a> </td>
          <td>(</td>
          <td class="paramtype">const u8 *&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>de-serialize 16 bit value, little-endian. </p>
<p>De-serialize 16 bit value from the sequence of bytes. Assume that less significant byte goes first in the input byte sequence. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to buffer containing 2 bytes to convert from little-endian format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>16 bit unsigned integer converted from little-endian byte order to native byte order. </dd></dl>

</div>
</div>
<a class="anchor" id="adebbff7e07d2ecf54610eff898545394"></a><!-- doxytag: member="ting::util::Deserialize32BE" ref="adebbff7e07d2ecf54610eff898545394" args="(const u8 *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> <a class="el" href="namespaceting_1_1util.htm#adebbff7e07d2ecf54610eff898545394">ting::util::Deserialize32BE</a> </td>
          <td>(</td>
          <td class="paramtype">const u8 *&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>de-serialize 32 bit value, big-endian. </p>
<p>De-serialize 32 bit value from the sequence of bytes. Assume that most significant byte goes first in the input byte sequence. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to buffer containing 4 bytes to convert from big-endian format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>32 bit unsigned integer converted from big-endian byte order to native byte order. </dd></dl>

</div>
</div>
<a class="anchor" id="a6ab2e22ee7e2027f584e38a064949028"></a><!-- doxytag: member="ting::util::Deserialize32LE" ref="a6ab2e22ee7e2027f584e38a064949028" args="(const u8 *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a> <a class="el" href="namespaceting_1_1util.htm#a6ab2e22ee7e2027f584e38a064949028">ting::util::Deserialize32LE</a> </td>
          <td>(</td>
          <td class="paramtype">const u8 *&#160;</td>
          <td class="paramname"><em>buf</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>de-serialize 32 bit value, little-endian. </p>
<p>De-serialize 32 bit value from the sequence of bytes. Assume that less significant byte goes first in the input byte sequence. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>- pointer to buffer containing 4 bytes to convert from little-endian format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>32 bit unsigned integer converted from little-endian byte order to native byte order. </dd></dl>

</div>
</div>
<a class="anchor" id="ac11d029718681c20d79a6cfc15104fd0"></a><!-- doxytag: member="ting::util::Serialize16BE" ref="ac11d029718681c20d79a6cfc15104fd0" args="(u16 value, u8 *out_buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#ac11d029718681c20d79a6cfc15104fd0">ting::util::Serialize16BE</a> </td>
          <td>(</td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8 *&#160;</td>
          <td class="paramname"><em>out_buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>serialize 16 bit value, big-endian. </p>
<p>Serialize 16 bit value, most significant byte first. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value. </td></tr>
    <tr><td class="paramname">out_buf</td><td>- pointer to the 2 byte buffer where the result will be placed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abee0309fe71090279ad4382a10b0e684"></a><!-- doxytag: member="ting::util::Serialize16LE" ref="abee0309fe71090279ad4382a10b0e684" args="(u16 value, u8 *out_buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#abee0309fe71090279ad4382a10b0e684">ting::util::Serialize16LE</a> </td>
          <td>(</td>
          <td class="paramtype">u16&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8 *&#160;</td>
          <td class="paramname"><em>out_buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>serialize 16 bit value, little-endian. </p>
<p>Serialize 16 bit value, less significant byte first. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value. </td></tr>
    <tr><td class="paramname">out_buf</td><td>- pointer to the 2 byte buffer where the result will be placed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa5e04e47738f97764fb0483c2119aa4c"></a><!-- doxytag: member="ting::util::Serialize32BE" ref="aa5e04e47738f97764fb0483c2119aa4c" args="(u32 value, u8 *out_buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#aa5e04e47738f97764fb0483c2119aa4c">ting::util::Serialize32BE</a> </td>
          <td>(</td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8 *&#160;</td>
          <td class="paramname"><em>out_buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>serialize 32 bit value, big-endian. </p>
<p>Serialize 32 bit value, most significant byte first. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value. </td></tr>
    <tr><td class="paramname">out_buf</td><td>- pointer to the 4 byte buffer where the result will be placed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a83ab06ea7b2f939050213915959ac43c"></a><!-- doxytag: member="ting::util::Serialize32LE" ref="a83ab06ea7b2f939050213915959ac43c" args="(u32 value, u8 *out_buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespaceting_1_1util.htm#a83ab06ea7b2f939050213915959ac43c">ting::util::Serialize32LE</a> </td>
          <td>(</td>
          <td class="paramtype">u32&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8 *&#160;</td>
          <td class="paramname"><em>out_buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>serialize 32 bit value, little-endian. </p>
<p>Serialize 32 bit value, less significant byte first. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>- the value. </td></tr>
    <tr><td class="paramname">out_buf</td><td>- pointer to the 4 byte buffer where the result will be placed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="namespaceting_1_1util.htm">util</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:39 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
