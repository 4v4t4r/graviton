<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt; Class Template Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1IntrusiveSingleton.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::IntrusiveSingleton" -->
<p>Intrusive singleton base class.  
 <a href="classting_1_1IntrusiveSingleton.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Singleton_8hpp_source.htm">Singleton.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classting_1_1IntrusiveSingleton.png" usemap="#ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt;_map" alt=""/>
  <map id="ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt;_map" name="ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt;_map">
<area href="classting_1_1Singleton.htm" title="Singleton base class." alt="ting::Singleton&lt; T &gt;" shape="rect" coords="0,56,277,80"/>
<area href="classting_1_1timer_1_1Lib.htm" title="Timer library singleton class." alt="ting::timer::Lib" shape="rect" coords="287,56,564,80"/>
</map>
 </div></div>

<p><a href="classting_1_1IntrusiveSingleton-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1IntrusiveSingleton.htm#ac6199123a09646e46a5b6436df1c08be">~IntrusiveSingleton</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1IntrusiveSingleton.htm#a0a9252ea1d59b7dcfe01853655c9d084">IsCreated</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tells if singleton object is created or not.  <a href="#a0a9252ea1d59b7dcfe01853655c9d084"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1IntrusiveSingleton.htm#a7a29320c2ac5be560f5609a03705365a">Inst</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">get singleton instance.  <a href="#a7a29320c2ac5be560f5609a03705365a"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classting_1_1Inited.htm">ting::Inited</a>&lt; T *, 0 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1IntrusiveSingleton.htm#adeeff7d34c0b5910d50e810adcc70121">T_Instance</a></td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1IntrusiveSingleton.htm#acda85027995a790fecd706fa1f2f71cc">IntrusiveSingleton</a> ()</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T, class T_InstanceOwner = T&gt;<br/>
class ting::IntrusiveSingleton&lt; T, T_InstanceOwner &gt;</h3>

<p>Intrusive singleton base class. </p>
<p>This is a basic intrusive singleton template. Template params: T - your singletone class type, T_InstanceOwner - class which owns the static 'instance' variable. In most cases T_InstanceOwner is the same as T. Usage as follows: </p>
<div class="fragment"><pre class="fragment">        <span class="keyword">class </span>MySingleton : <span class="keyword">public</span> ting::<a class="code" href="classting_1_1IntrusiveSingleton.htm#acda85027995a790fecd706fa1f2f71cc">IntrusiveSingleton</a>&lt;MySingleton, MySingleton&gt;{
                <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classting_1_1IntrusiveSingleton.htm" title="Intrusive singleton base class.">ting::IntrusiveSingleton</a>&lt;MySingleton, MySingleton&gt;;
                <span class="keyword">static</span> <a class="code" href="classting_1_1Inited.htm" title="Thin wrapper above any C++ built-in type allowing initialization from int.">ting::IntrusiveSingleton&lt;MySingleton, MySingleton&gt;::T_Instance</a> instance;
 
        <span class="keyword">public</span>:
                <span class="keywordtype">void</span> DoSomething(){
                        <span class="comment">//...</span>
                }
  };
 
        <span class="comment">//define the static variable somewhere in .cpp file.</span>
  <a class="code" href="classting_1_1Inited.htm" title="Thin wrapper above any C++ built-in type allowing initialization from int.">ting::IntrusiveSingleton&lt;MySingleton, MySingleton&gt;::T_Instance</a> MySingleton::instance;

        <span class="keywordtype">int</span> main(<span class="keywordtype">int</span>, <span class="keywordtype">char</span>**){
                MySingleton mySingleton;

                <a class="code" href="classting_1_1IntrusiveSingleton.htm#a7a29320c2ac5be560f5609a03705365a" title="get singleton instance.">MySingleton::Inst</a>().DoSomething();
        }
</pre></div> </div><hr/><h2>Member Typedef Documentation</h2>
<a class="anchor" id="adeeff7d34c0b5910d50e810adcc70121"></a><!-- doxytag: member="ting::IntrusiveSingleton::T_Instance" ref="adeeff7d34c0b5910d50e810adcc70121" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T_InstanceOwner = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classting_1_1Inited.htm">ting::Inited</a>&lt;T*, 0&gt; <a class="el" href="classting_1_1IntrusiveSingleton.htm">ting::IntrusiveSingleton</a>&lt; T, T_InstanceOwner &gt;::<a class="el" href="classting_1_1IntrusiveSingleton.htm#adeeff7d34c0b5910d50e810adcc70121">T_Instance</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acda85027995a790fecd706fa1f2f71cc"></a><!-- doxytag: member="ting::IntrusiveSingleton::IntrusiveSingleton" ref="acda85027995a790fecd706fa1f2f71cc" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T_InstanceOwner = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1IntrusiveSingleton.htm">ting::IntrusiveSingleton</a>&lt; T, T_InstanceOwner &gt;::<a class="el" href="classting_1_1IntrusiveSingleton.htm">IntrusiveSingleton</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac6199123a09646e46a5b6436df1c08be"></a><!-- doxytag: member="ting::IntrusiveSingleton::~IntrusiveSingleton" ref="ac6199123a09646e46a5b6436df1c08be" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T_InstanceOwner = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1IntrusiveSingleton.htm">ting::IntrusiveSingleton</a>&lt; T, T_InstanceOwner &gt;::~<a class="el" href="classting_1_1IntrusiveSingleton.htm">IntrusiveSingleton</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a7a29320c2ac5be560f5609a03705365a"></a><!-- doxytag: member="ting::IntrusiveSingleton::Inst" ref="a7a29320c2ac5be560f5609a03705365a" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T_InstanceOwner = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static T&amp; <a class="el" href="classting_1_1IntrusiveSingleton.htm">ting::IntrusiveSingleton</a>&lt; T, T_InstanceOwner &gt;::<a class="el" href="classting_1_1IntrusiveSingleton.htm#a7a29320c2ac5be560f5609a03705365a">Inst</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>get singleton instance. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to singleton object instance. </dd></dl>

</div>
</div>
<a class="anchor" id="a0a9252ea1d59b7dcfe01853655c9d084"></a><!-- doxytag: member="ting::IntrusiveSingleton::IsCreated" ref="a0a9252ea1d59b7dcfe01853655c9d084" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T_InstanceOwner = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static bool <a class="el" href="classting_1_1IntrusiveSingleton.htm">ting::IntrusiveSingleton</a>&lt; T, T_InstanceOwner &gt;::<a class="el" href="classting_1_1IntrusiveSingleton.htm#a0a9252ea1d59b7dcfe01853655c9d084">IsCreated</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>tells if singleton object is created or not. </p>
<p>Note, this function is not thread safe. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if object is created. </dd>
<dd>
false otherwise. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Singleton_8hpp_source.htm">Singleton.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1IntrusiveSingleton.htm">IntrusiveSingleton</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:36 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
