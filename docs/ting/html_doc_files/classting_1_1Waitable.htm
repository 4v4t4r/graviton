<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libting: ting::Waitable Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">libting
   &#160;<span id="projectnumber">2.0.0</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classting_1_1Waitable.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">ting::Waitable Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="ting::Waitable" -->
<p>Base class for objects which can be waited for.  
 <a href="classting_1_1Waitable.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ting::Waitable:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classting_1_1Waitable.png" usemap="#ting::Waitable_map" alt=""/>
  <map id="ting::Waitable_map" name="ting::Waitable_map">
<area href="classting_1_1mt_1_1Queue.htm" title="Message queue." alt="ting::mt::Queue" shape="rect" coords="0,56,162,80"/>
<area href="classting_1_1net_1_1Socket.htm" title="Basic socket class." alt="ting::net::Socket" shape="rect" coords="172,56,334,80"/>
<area href="classting_1_1net_1_1TCPServerSocket.htm" title="a class which represents a TCP server socket." alt="ting::net::TCPServerSocket" shape="rect" coords="0,112,162,136"/>
<area href="classting_1_1net_1_1TCPSocket.htm" title="a class which represents a TCP socket." alt="ting::net::TCPSocket" shape="rect" coords="172,112,334,136"/>
<area href="classting_1_1net_1_1UDPSocket.htm" title="UDP socket class." alt="ting::net::UDPSocket" shape="rect" coords="344,112,506,136"/>
</map>
 </div></div>

<p><a href="classting_1_1Waitable-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">EReadinessFlags</a> { <br/>
&#160;&#160;<a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeaad54d466c6ce198aad8115773b3abf1b">NOT_READY</a> =  0, 
<a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeab8c09c1a43e6f127ee2dbd6ceb1623e7">READ</a> =  1, 
<a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abea9c9432c7952f916f1072696bbc35e2db">WRITE</a> =  2, 
<a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeaaceab4f998e5df47f9cf4f20dba89460">READ_AND_WRITE</a> =  3, 
<br/>
&#160;&#160;<a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeaf1d0dcf8356f54bcc50c956988250537">ERROR_CONDITION</a> =  4
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a5bbd882bcbe8c4a690a706b77b32637e">~Waitable</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a3fba19627cd194aaa1153760ccf85091">CanRead</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if "Can read" flag is set.  <a href="#a3fba19627cd194aaa1153760ccf85091"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#abac837a916df462a0c1888941834d93d">CanWrite</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if "Can write" flag is set.  <a href="#abac837a916df462a0c1888941834d93d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a46b9dab7b78519dbe1b39f4d9e07d776">ErrorCondition</a> () const   throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if "error" flag is set.  <a href="#a46b9dab7b78519dbe1b39f4d9e07d776"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#aa773fa77eaafc97f7da9133444152bee">GetUserData</a> ()  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get user data associated with this <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>.  <a href="#aa773fa77eaafc97f7da9133444152bee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a1706e88628091350339ef217eebfdd0f">SetUserData</a> (void *data)  throw ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set user data.  <a href="#a1706e88628091350339ef217eebfdd0f"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a9cb812eaea0bd35bce31c14b755940a6">Waitable</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#ab9a6eba77ca2a8bdffe97683374ba6be">IsAdded</a> () const   throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a24f9d8bba51de7b3ec7b447279361130">Waitable</a> (const <a class="el" href="classting_1_1Waitable.htm">Waitable</a> &amp;w)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a24f9d8bba51de7b3ec7b447279361130"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1Waitable.htm">Waitable</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a9a732341413d7ebd2b9a610adaeb3ea1">operator=</a> (const <a class="el" href="classting_1_1Waitable.htm">Waitable</a> &amp;w)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a9a732341413d7ebd2b9a610adaeb3ea1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a88ad92a99e4828aa5d5003dcabfb97b8">SetCanReadFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#ae7a518cea602c4d2c050d0f0faa4902d">ClearCanReadFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#aa65a87874bfe89d950901948176184d5">SetCanWriteFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#af593425a807d59fbef4c0206dcd91935">ClearCanWriteFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#ae003993b07a23a6941b9a0bdd977fceb">SetErrorFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#ae33b2cd58cd93cd6a26eabcb1cdcb679">ClearErrorFlag</a> ()  throw ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a0de89037f9e0c0e6ae399c5daab94a33">ClearAllReadinessFlags</a> ()  throw ()</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classting_1_1Inited.htm">ting::Inited</a>&lt; <a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeaad54d466c6ce198aad8115773b3abf1b">NOT_READY</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classting_1_1Waitable.htm#a08d25d16b30597469216717faeacdba0">readinessFlags</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Base class for objects which can be waited for. </p>
<p>Base class for objects which can be used in wait sets. </p>
</div><hr/><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abe"></a><!-- doxytag: member="ting::Waitable::EReadinessFlags" ref="ad06cce175fd90cd3bda3960ffc7d7abe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abe">ting::Waitable::EReadinessFlags</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abeaad54d466c6ce198aad8115773b3abf1b"></a><!-- doxytag: member="NOT_READY" ref="ad06cce175fd90cd3bda3960ffc7d7abeaad54d466c6ce198aad8115773b3abf1b" args="" -->NOT_READY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abeab8c09c1a43e6f127ee2dbd6ceb1623e7"></a><!-- doxytag: member="READ" ref="ad06cce175fd90cd3bda3960ffc7d7abeab8c09c1a43e6f127ee2dbd6ceb1623e7" args="" -->READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abea9c9432c7952f916f1072696bbc35e2db"></a><!-- doxytag: member="WRITE" ref="ad06cce175fd90cd3bda3960ffc7d7abea9c9432c7952f916f1072696bbc35e2db" args="" -->WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abeaaceab4f998e5df47f9cf4f20dba89460"></a><!-- doxytag: member="READ_AND_WRITE" ref="ad06cce175fd90cd3bda3960ffc7d7abeaaceab4f998e5df47f9cf4f20dba89460" args="" -->READ_AND_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ad06cce175fd90cd3bda3960ffc7d7abeaf1d0dcf8356f54bcc50c956988250537"></a><!-- doxytag: member="ERROR_CONDITION" ref="ad06cce175fd90cd3bda3960ffc7d7abeaf1d0dcf8356f54bcc50c956988250537" args="" -->ERROR_CONDITION</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9cb812eaea0bd35bce31c14b755940a6"></a><!-- doxytag: member="ting::Waitable::Waitable" ref="a9cb812eaea0bd35bce31c14b755940a6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1Waitable.htm#a9cb812eaea0bd35bce31c14b755940a6">ting::Waitable::Waitable</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a24f9d8bba51de7b3ec7b447279361130"></a><!-- doxytag: member="ting::Waitable::Waitable" ref="a24f9d8bba51de7b3ec7b447279361130" args="(const Waitable &amp;w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1Waitable.htm#a9cb812eaea0bd35bce31c14b755940a6">ting::Waitable::Waitable</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Waitable.htm">Waitable</a> &amp;&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy constructor. </p>
<p>It is not possible to copy a waitable which is currently added to <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a>. Works as std::auto_ptr, i.e. the object it copied from becomes invalid. Use this copy constructor only if you really know what you are doing. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>- <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to copy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5bbd882bcbe8c4a690a706b77b32637e"></a><!-- doxytag: member="ting::Waitable::~Waitable" ref="a5bbd882bcbe8c4a690a706b77b32637e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classting_1_1Waitable.htm#a5bbd882bcbe8c4a690a706b77b32637e">ting::Waitable::~Waitable</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a3fba19627cd194aaa1153760ccf85091"></a><!-- doxytag: member="ting::Waitable::CanRead" ref="a3fba19627cd194aaa1153760ccf85091" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classting_1_1Waitable.htm#a3fba19627cd194aaa1153760ccf85091">ting::Waitable::CanRead</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if "Can read" flag is set. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> is ready for reading. </dd></dl>

</div>
</div>
<a class="anchor" id="abac837a916df462a0c1888941834d93d"></a><!-- doxytag: member="ting::Waitable::CanWrite" ref="abac837a916df462a0c1888941834d93d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classting_1_1Waitable.htm#abac837a916df462a0c1888941834d93d">ting::Waitable::CanWrite</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if "Can write" flag is set. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> is ready for writing. </dd></dl>

</div>
</div>
<a class="anchor" id="a0de89037f9e0c0e6ae399c5daab94a33"></a><!-- doxytag: member="ting::Waitable::ClearAllReadinessFlags" ref="a0de89037f9e0c0e6ae399c5daab94a33" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#a0de89037f9e0c0e6ae399c5daab94a33">ting::Waitable::ClearAllReadinessFlags</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae7a518cea602c4d2c050d0f0faa4902d"></a><!-- doxytag: member="ting::Waitable::ClearCanReadFlag" ref="ae7a518cea602c4d2c050d0f0faa4902d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#ae7a518cea602c4d2c050d0f0faa4902d">ting::Waitable::ClearCanReadFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af593425a807d59fbef4c0206dcd91935"></a><!-- doxytag: member="ting::Waitable::ClearCanWriteFlag" ref="af593425a807d59fbef4c0206dcd91935" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#af593425a807d59fbef4c0206dcd91935">ting::Waitable::ClearCanWriteFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae33b2cd58cd93cd6a26eabcb1cdcb679"></a><!-- doxytag: member="ting::Waitable::ClearErrorFlag" ref="ae33b2cd58cd93cd6a26eabcb1cdcb679" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#ae33b2cd58cd93cd6a26eabcb1cdcb679">ting::Waitable::ClearErrorFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a46b9dab7b78519dbe1b39f4d9e07d776"></a><!-- doxytag: member="ting::Waitable::ErrorCondition" ref="a46b9dab7b78519dbe1b39f4d9e07d776" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classting_1_1Waitable.htm#a46b9dab7b78519dbe1b39f4d9e07d776">ting::Waitable::ErrorCondition</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if "error" flag is set. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> is in error state. </dd></dl>

</div>
</div>
<a class="anchor" id="aa773fa77eaafc97f7da9133444152bee"></a><!-- doxytag: member="ting::Waitable::GetUserData" ref="aa773fa77eaafc97f7da9133444152bee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* <a class="el" href="classting_1_1Waitable.htm#aa773fa77eaafc97f7da9133444152bee">ting::Waitable::GetUserData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get user data associated with this <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </p>
<p>Returns the pointer to the user data which was previously set by <a class="el" href="classting_1_1Waitable.htm#a1706e88628091350339ef217eebfdd0f" title="Set user data.">SetUserData()</a> method. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the user data. </dd>
<dd>
zero pointer if the user data was not set. </dd></dl>

</div>
</div>
<a class="anchor" id="ab9a6eba77ca2a8bdffe97683374ba6be"></a><!-- doxytag: member="ting::Waitable::IsAdded" ref="ab9a6eba77ca2a8bdffe97683374ba6be" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classting_1_1Waitable.htm#ab9a6eba77ca2a8bdffe97683374ba6be">ting::Waitable::IsAdded</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9a732341413d7ebd2b9a610adaeb3ea1"></a><!-- doxytag: member="ting::Waitable::operator=" ref="a9a732341413d7ebd2b9a610adaeb3ea1" args="(const Waitable &amp;w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1Waitable.htm">Waitable</a>&amp; ting::Waitable::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classting_1_1Waitable.htm">Waitable</a> &amp;&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assignment operator. </p>
<p>It is not possible to assign a waitable which is currently added to <a class="el" href="classting_1_1WaitSet.htm" title="Set of Waitable objects to wait for.">WaitSet</a>. Works as std::auto_ptr, i.e. the object it copied from becomes invalid. Use this copy constructor only if you really know what you are doing. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>- <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a> object to assign to this object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a88ad92a99e4828aa5d5003dcabfb97b8"></a><!-- doxytag: member="ting::Waitable::SetCanReadFlag" ref="a88ad92a99e4828aa5d5003dcabfb97b8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#a88ad92a99e4828aa5d5003dcabfb97b8">ting::Waitable::SetCanReadFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa65a87874bfe89d950901948176184d5"></a><!-- doxytag: member="ting::Waitable::SetCanWriteFlag" ref="aa65a87874bfe89d950901948176184d5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#aa65a87874bfe89d950901948176184d5">ting::Waitable::SetCanWriteFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae003993b07a23a6941b9a0bdd977fceb"></a><!-- doxytag: member="ting::Waitable::SetErrorFlag" ref="ae003993b07a23a6941b9a0bdd977fceb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#ae003993b07a23a6941b9a0bdd977fceb">ting::Waitable::SetErrorFlag</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>  throw ()<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1706e88628091350339ef217eebfdd0f"></a><!-- doxytag: member="ting::Waitable::SetUserData" ref="a1706e88628091350339ef217eebfdd0f" args="(void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classting_1_1Waitable.htm#a1706e88628091350339ef217eebfdd0f">ting::Waitable::SetUserData</a> </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td>  throw ()<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set user data. </p>
<p>See description of <a class="el" href="classting_1_1Waitable.htm#aa773fa77eaafc97f7da9133444152bee" title="Get user data associated with this Waitable.">GetUserData()</a> for more details. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>- pointer to the user data to associate with this <a class="el" href="classting_1_1Waitable.htm" title="Base class for objects which can be waited for.">Waitable</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a08d25d16b30597469216717faeacdba0"></a><!-- doxytag: member="ting::Waitable::readinessFlags" ref="a08d25d16b30597469216717faeacdba0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classting_1_1Inited.htm">ting::Inited</a>&lt;<a class="el" href="namespaceting.htm#aa54945671d9955d39a42606fab2c1b0f">u32</a>, <a class="el" href="classting_1_1Waitable.htm#ad06cce175fd90cd3bda3960ffc7d7abeaad54d466c6ce198aad8115773b3abf1b">NOT_READY</a>&gt; <a class="el" href="classting_1_1Waitable.htm#a08d25d16b30597469216717faeacdba0">ting::Waitable::readinessFlags</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="WaitSet_8hpp_source.htm">WaitSet.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceting.htm">ting</a>      </li>
      <li class="navelem"><a class="el" href="classting_1_1Waitable.htm">Waitable</a>      </li>

    <li class="footer">Generated on Thu Feb 21 2013 20:36:37 for libting by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
